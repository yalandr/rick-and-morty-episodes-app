{"version":3,"sources":["components/MyWatchListForm.jsx","components/ToWatchItem.jsx","components/MyWatchList.jsx","components/EpisodesList.jsx","components/Header.jsx","App.js","index.js"],"names":["MyWatchListForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","ToWatchItem","todos","completeToWatch","removeToWatch","updateToWatch","setEdit","map","todo","index","isComplete","onClick","MyWatchList","setToWatch","getItemsToStorage","JSON","parse","localStorage","getItem","setItem","stringify","test","newToWatch","updatedToWatch","removeArr","filter","toWatchId","newValue","prev","item","EpisodesList","episodes","setEpisodes","fetch","then","response","json","data","results","catch","error","console","log","air_date","episode","Header","src","alt","to","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e063c292.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction MyWatchListForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n       inputRef.current.focus()\r\n    })\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input\r\n        });\r\n\r\n        setInput('');\r\n    }\r\n\r\n    return (\r\n        <form className=\"towatch-form\" onSubmit={handleSubmit}>\r\n            {props.edit ? (\r\n                <div>\r\n                    <input \r\n                    type=\"text\" \r\n                    placeholder=\"Update your item\" \r\n                    value={input} \r\n                    name=\"text\"\r\n                    className=\"towatch-input edit\"\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                    />\r\n                    <button className=\"towatch-button edit\">Update</button>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <input \r\n                    type=\"text\" \r\n                    placeholder=\"Input the code of the episode\" \r\n                    value={input} \r\n                    name=\"text\"\r\n                    className=\"towatch-input\"\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                    />\r\n                    <button className=\"towatch-button\">Add an episode</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MyWatchListForm;\r\n","import React, {useState} from 'react';\r\nimport MyWatchListForm from './MyWatchListForm';\r\nimport {RiCloseCircleLine} from 'react-icons/ri';\r\nimport {TiEdit} from 'react-icons/ti';\r\n\r\nfunction ToWatchItem({todos, completeToWatch, removeToWatch, updateToWatch}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateToWatch(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <MyWatchListForm edit={edit} onSubmit={submitUpdate} />;\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div \r\n            className={todo.isComplete ? 'towatch-row complete' : 'towatch-row'} \r\n            key={index}>\r\n            <div key={todo.id} onClick={() => completeToWatch(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine \r\n                    onClick={() => removeToWatch(todo.id)}\r\n                    className='delete-icon'\r\n                    />\r\n                <TiEdit \r\n                    onClick={() => setEdit({ id: todo.id, value: todo.text})}\r\n                    className='edit-icon'\r\n                    />\r\n                <div className=\"item-checkbox\" key={todo.id} onClick={() => completeToWatch(todo.id)}></div>\r\n            </div>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default ToWatchItem;\r\n","import React, {useState, useEffect} from 'react';\r\nimport ToWatchItem from './ToWatchItem';\r\nimport MyWatchListForm from './MyWatchListForm';\r\n\r\nfunction MyWatchList() {\r\n\r\n    const [todos, setToWatch] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getItemsToStorage = JSON.parse(localStorage.getItem('mywatchlist'));\r\n\r\n        if (getItemsToStorage) {\r\n            setToWatch(getItemsToStorage);\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('mywatchlist', JSON.stringify(todos));\r\n    }, [todos])\r\n\r\n    const addToWatch = todo => {\r\n       if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n           return;\r\n       }\r\n\r\n       const newToWatch = [todo, ...todos];\r\n       setToWatch(newToWatch);\r\n    };\r\n\r\n    const updateToWatch = (toWatchId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setToWatch(prev => prev.map(item => (item.id === toWatchId ? newValue : item)));\r\n    }\r\n\r\n    const removeToWatch = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id) \r\n\r\n        setToWatch(removeArr);\r\n    };\r\n\r\n    const completeToWatch = id => {\r\n        let updatedToWatch = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setToWatch(updatedToWatch);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>My Watch List</h1>\r\n            <MyWatchListForm onSubmit={addToWatch} />\r\n            <ToWatchItem\r\n                todos={todos}\r\n                completeToWatch={completeToWatch}\r\n                removeToWatch={removeToWatch}\r\n                updateToWatch={updateToWatch}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyWatchList;\r\n","// import React from 'react';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\nfunction EpisodesList() {\r\n\r\n    const [episodes, setEpisodes] = useState([]);\r\n\r\n    const initialUrl = 'https://rickandmortyapi.com/api/episode';\r\n\r\n    const fetchEpisodes = (url) => {\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setEpisodes(data.results);\r\n        })\r\n        .catch(error => console.log(error))\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchEpisodes(initialUrl);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"episodes-list\">\r\n            <h1>Episodes list</h1>\r\n            {\r\n                episodes.map((item, index) => (\r\n                    <div className=\"episodes-cards-container\" key={index}>\r\n                        <div className=\"episode-card\">\r\n                            <h3 className=\"episode-name\">\r\n                                Name: {item.name}\r\n                            </h3>\r\n                            <p className=\"episide-air-date\">\r\n                                <b>Air Date:</b> {item.air_date}\r\n                            </p>\r\n                            <p className=\"episide-code\">\r\n                                <b>Episode code:</b> {item.episode}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EpisodesList","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <img src=\"img/Rick_and_Morty_logo.png\" className=\"logo-img\" alt=\"Rick and Morty logo\" />\r\n            <div className=\"navigation\">\r\n                <Link to=\"/\" className=\"nav-link\">Episodes List</Link>\r\n                <Link to=\"/watchlist\" className=\"nav-link\">My Watch List</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\nimport './App.css';\nimport MyWatchList from './components/MyWatchList';\nimport EpisodesList from './components/EpisodesList';\nimport Header from './components/Header';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  return (\n    <div className=\"episodes-app\">\n      <Router>\n        <Header />\n          <Switch>\n            <Route exact path='/' component={EpisodesList} />\n            <Route exact path='/watchlist' component={MyWatchList} />\n          </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}